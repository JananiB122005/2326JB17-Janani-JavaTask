Ticket Booking Simulation

class TicketCounter {
    int seats = 5;

    synchronized void bookTicket(String name, int wanted) {
        System.out.println(name + " is trying to book " + wanted + " seat(s)");
        try {
            Thread.sleep(500);
        } catch (Exception e) {}

        if (seats >= wanted) {
            seats -= wanted;
            System.out.println(name + " booked " + wanted + " seat(s). Seats left: " + seats);
        } else {
            System.out.println("Sorry " + name + ", not enough seats available. Seats left: " + seats);
        }
    }
}

class User extends Thread {
    TicketCounter counter;
    String userName;
    int seatsToBook;

    User(TicketCounter counter, String userName, int seatsToBook) {
        this.counter = counter;
        this.userName = userName;
        this.seatsToBook = seatsToBook;
    }

    public void run() {
        counter.bookTicket(userName, seatsToBook);
    }
}

public class BookingApp {
    public static void main(String[] args) {
        TicketCounter counter = new TicketCounter();

        User u1 = new User(counter, "Alice", 2);
        User u2 = new User(counter, "Bob", 3);
        User u3 = new User(counter, "Charlie", 1);

        u1.start();
        u2.start();
        u3.start();
    }
}